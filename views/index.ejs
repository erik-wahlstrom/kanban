<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Kanban!</title>
    <link rel="stylesheet" href="./public/stylesheets/style.css">
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

    <script src="./public/scripts/Util.js"></script>
    <script src="./public/scripts/WorkItem.js"></script>
    <script src="./public/scripts/Table.js"></script>
    <script src="./public/scripts/Person.js"></script>
    <script src="./public/scripts/Task.js"></script>
    <script src="./public/scripts/Note.js"></script>
    <script src="./public/scripts/UX.js"></script>
    
</head>
<body >
    <%- include('modal.ejs'); %>
    <div class="container" >
        <div class="main_header" >
            <header><h2>The Kanban Board!<h2></header>
            <table style="color:#000;">
                <tr><td><strong>Owner:</strong>&nbsp;</td><td><input id="person_name" type="text" disabled="disabled"/></td></tr>
                <tr><td><strong>Group:</strong>&nbsp;</td><td><select id="sel-current_work_item_group_id"></td></tr>
                <tr><td><strong>Add a new task</strong>&nbsp;</td><td>
                    <input id="btn-add-task" type="button" value="Add" ></input>
                    </td></tr>
                <tr><td><strong>Failsafe:</strong>&nbsp;</td><td><input  id="chk-failsafe" type="checkbox" value="Submit"  checked="checked"/></td></tr>
            </table>
        </div>
        <div id="columns" class="column_container">
            <div id="column-not-started" class="column" draggable="true"></div>
            <div class="spacer"></div>
            <div id="column-active" class="column" draggable="true"></div>
            <div class="spacer"></div>
            <div id="column-complete" class="column" draggable="true"></div>
        </div>
    </div>

    <script type="text/javascript">
    //<![CDATA[
        var fbId = "<%= req.cookies.user_id %>";
        var stateMapping = [];
        var stateMapping = [{}, //This is here so that foo.idx = stateMapping[idx]; 
            {idx:1, id:"column-not-started",  description:"Not started", include:true, age:null}, 
            {idx:2, id:"column-active",       description:"Active", include:true, age:null}, 
            {idx:3, id:"column-complete",     description:"Complete", include:true, age:2}
        ];
        CreateColumn(stateMapping[1]);
        CreateColumn(stateMapping[2]);
        CreateColumn(stateMapping[3]);

        function CloseModals() {
            HideDiv('modal-task');
        }


        /****************************************************************************/
        /****************************************************************************/
        /*********                          COLUMNS                        **********/
        /****************************************************************************/
        /****************************************************************************/
        //<div id="column-not-started" class="column" ><header>Not Started</header></div>
        function CreateColumn( column) {
            var div = document.getElementById(column.id);
            var header = div.appendChild(document.createElement("header"));
            var p = header.appendChild(document.createElement("p"));
            p.appendChild(document.createTextNode(column.description));
            var ul = div.appendChild(document.createElement("ul"));
        }

        function FindColumn(divId) {
            for (i=0;i<stateMapping.length;i++) {
                if (stateMapping[i].id == divId) {
                    return stateMapping[i];
                }
            }
            return null;    
        }
        function columnDragOver(e) { 
            if (e.preventDefault) {
                e.preventDefault(); // Necessary. Allows us to drop.
            }
        }
        function columnDrop(e) { 
            var task = JSON.parse(e.dataTransfer.getData("json"));
            var parent = e.currentTarget;
            // e could be a lot of things, and so walk up until you get the column.
            parent = FindParent(parent, "div", "column");
            if (parent.id) {
                var column = FindColumn(parent.id);
                UpdateState(task, column);
            }
        }

        function taskDragStart(e) { 
            // Target (this) element is the source node.
            this.style.opacity = '0.4';
            e.dataTransfer.effectAllowed = 'move';
            e.dataTransfer.setData('json', JSON.stringify(e.srcElement.task));
        }
        function taskDrag(e) { 
            // Target (this) element is the source node.
            this.style.opacity = '1.0';
        }


    /***************************************************************/
    /***************************************************************/

    function ShowModal(config) {
        CloseModals();

        config.fields.forEach(function(field) {
            var e = document.getElementById(field.id);
            if (e) {
                e.style.display = field.display;
                if (field.readOnly && field.inputId) {
                    var input = document.getElementById(field.inputId);
                    input.readOnly = field.readOnly;               
                    input.disabled = field.readOnly;               
                }
            }
        });
        ShowDivAsBlock(config.div_id);

    }
    function ShowUpdateUi(e) {
        var parent = FindParent(e.srcElement, "li");
        if (parent) {
            var task_id = parent.task_id;
            var wi = new WorkItem();
            wi.id = task_id
            wi.error = function(response) {
                HandleError("Could not retreive record(s)", response);
            }
            wi.success = function(response) {
                SetValueById("txt-task_id", response.data.id);
                SetValueById("txt-state_id", response.data.state_id);
                SetValueById("sel-owner_id", response.data.person_id);
                SetValueById("sel-work_item_group_id", response.data.work_item_group_id);
                SetValueById("txt-created_date", response.data.created_date);
                SetValueById("txt-due_date", response.data.due_date);
                SetValueById("txt-last_update", response.data.last_update);
                SetValueById("txt-description", response.data.description);
                ListNotes(response.data.id);
            }
            wi.FindWorkItem();
        }

        ShowModal(modalConfig.update);
    }

    function FindWorkItemsByGroup(work_item_group_id)
    {
        var wi = new WorkItem();

        wi.error = function(response) {
            HandleError("Could not retreive record(s)", response);
        }
        wi.success = function(response) {
            ClearTasks();
            InitTasks(response.data);
        }
        wi.work_item_group_id = work_item_group_id;
        wi.FindWorkItemsByGroup();
    }




    // window.onload
    window.onload = function() {
        var span = document.getElementsByClassName('close')[0];

        var Xs = document.querySelectorAll(".close");

        // Get the button that opens the modal
        var btn = document.getElementById('btn-add-task');
        btn.onclick = function() {
            ShowModal(modalConfig.add);
        };

        // When the user clicks on <span> (x), close the modal
        [].forEach.call(Xs, function(x) {
            x.onclick = function() {
                CloseModals();
            };
        });

        // When the user clicks anywhere outside of the modal, close it
        var modal= document.getElementById('modal-task');
        window.onclick = function(event) {
            if (event.target == modal) {
                CloseModals();
            }
        }

        LoadSelect("sel-owner_id", "person", "id", "name", "name", false, 1);
        LoadSelect("sel-work_item_group_id", "work_item_group", "id", "description", "description", false, 0);
        LoadSelect("sel-current_work_item_group_id", "work_item_group", "id", "description", "description", false, 0);

        var sel = document.getElementById("sel-current_work_item_group_id");
        sel.onchange = function() {
            var idx = this.selectedIndex;
            FindWorkItemsByGroup(this.options[idx].value);
        }
        FindWorkItemsByGroup(1);

        $( function() {
            $( "#txt-due_date").datepicker({
                dateFormat: "yy-mm-dd"
            });
            $( "#txt-update-due_date").datepicker({
                dateFormat: "yy-mm-dd"
            });

        } );
        LookupUser();

        var columns = document.querySelectorAll(".column");
        [].forEach.call(columns, function(column) {
            column.addEventListener('dragover', columnDragOver, false);
            column.addEventListener('drop', columnDrop, false);
        });
    }
    // window.onload

    //]]>
  </script>
</body>
 